{"version":3,"sources":["auth/KeycloakContext.js","components/__types__/keycloak.js","components/__types__/ref.js","auth/KeycloakViews.js","components/__types__/alltywpsql.js","components/alltywpsql-field-table/AlltywpsqlFieldTable.js","components/AlltywpsqlDetails.js","components/common/Notification.js","api/helpers.js","api/alltywpsql.js","components/AlltywpsqlDetailsContainer.js","auth/withKeycloak.js","i18n/locales/index.js","i18n/i18n.js","i18n/setLocale.js","i18n/constants.js","helpers/widgetEvents.js","custom-elements/widgetEventTypes.js","custom-elements/AlltywpsqlDetailsElement.js"],"names":["KeycloakContext","React","createContext","PropTypes","shape","initialized","bool","authenticated","oneOfType","func","current","elementType","AuthenticatedView","children","keycloak","UnauthenticatedView","id","number","stringa","string","intero","lungo","flotto","doppio","grandecimale","datalocale","istante","zonadatatempo","booleano","enumeratore","AlltywpsqlFieldTable","t","language","i18n","alltywpsql","Table","TableHead","TableRow","TableCell","TableBody","Date","toLocaleDateString","toLocaleString","Checkbox","disabled","checked","defaultProps","withTranslation","AlltywpsqlDetails","Box","data-testid","widgetNamePlaceholder","statusIcon","success","CheckCircleIcon","error","ErrorIcon","info","InfoIcon","autoHideDurations","Notification","className","classes","passedStatus","status","message","onClose","isOpen","INFO","Icon","autoHideDuration","messageTemplate","clsx","icon","iconStatus","Snackbar","open","SnackbarContent","action","IconButton","key","aria-label","color","onClick","SUCCESS","ERROR","withStyles","theme","display","alignItems","fontSize","opacity","marginRight","spacing","backgroundColor","green","palette","dark","primary","main","withTheme","request","url","options","a","fetch","response","json","Promise","reject","Error","statusText","apiAlltywpsqlGet","serviceUrl","headers","Headers","Authorization","window","entando","token","method","AlltywpsqlDetailsContainer","props","state","notificationStatus","notificationMessage","createMuiTheme","closeNotification","bind","fetchData","this","prevProps","changedAuth","changedId","setState","handleError","err","onError","ThemeProvider","Component","withKeycloak","WrappedComponent","WithKeycloakComponent","renderWrappedComponent","value","forwardedRef","rest","ref","Consumer","forwardRef","en","it","resources","Object","keys","locales","reduce","acc","lang","i18next","locale","defaultLocale","use","initReactI18next","init","defaultNs","interpolation","escapeValue","lng","fallbackLng","react","useSuspense","setI18nextLocale","createWidgetEventPublisher","eventType","payload","eventId","widgetEvent","CustomEvent","detail","dispatchEvent","publishWidgetEvent","INPUT_EVENT_TYPES","tableSelect","OUTPUT_EVENT_TYPES","getKeycloakInstance","ATTRIBUTES","hidden","disableDefaultEventHandler","AlltywpsqlDetailsElement","name","oldValue","newValue","container","values","includes","onToggleDisableDefaultEvent","render","document","createElement","mountPoint","appendChild","eventHandler","shadowRoot","attachShadow","mode","jss","jssCreate","jssPreset","insertionPoint","muiTheme","MuiDialog","MuiPopover","unsubscribeFromKeycloakEvent","addEventListener","removeEventListener","retargetEvents","unsubscribeFromWidgetEvents","evt","type","setAttribute","widgetEvents","disableEventHandler","getAttribute","defaultEventHandlerDisabled","defaultWidgetEventHandler","forEach","ReactDOM","setLocale","Provider","StylesProvider","HTMLElement","customElements","define"],"mappings":"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","file":"static/js/main.99893bba.chunk.js","sourcesContent":["import React from 'react';\n\nconst KeycloakContext = React.createContext(null);\n\nexport default KeycloakContext;\n","import PropTypes from 'prop-types';\n\nconst keycloakType = PropTypes.shape({\n  initialized: PropTypes.bool,\n  authenticated: PropTypes.bool,\n});\n\nexport default keycloakType;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.oneOfType([\n  PropTypes.func,\n  PropTypes.shape({ current: PropTypes.elementType }),\n  PropTypes.shape(null),\n]);\n","export const AuthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return authenticated ? children : null;\n};\n\nexport const UnauthenticatedView = ({ children, keycloak }) => {\n  const authenticated = keycloak.initialized && keycloak.authenticated;\n  return !authenticated ? children : null;\n};\n","import PropTypes from 'prop-types';\n\nconst alltywpsqlType = PropTypes.shape({\n  id: PropTypes.number,\n  stringa: PropTypes.string,\n  intero: PropTypes.number,\n  lungo: PropTypes.number,\n  flotto: PropTypes.number,\n  doppio: PropTypes.number,\n  grandecimale: PropTypes.number,\n  datalocale: PropTypes.string,\n  istante: PropTypes.string,\n  zonadatatempo: PropTypes.string,\n  booleano: PropTypes.bool,\n  enumeratore: PropTypes.string,\n});\n\nexport default alltywpsqlType;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport alltywpsqlType from 'components/__types__/alltywpsql';\n\nconst AlltywpsqlFieldTable = ({ t, i18n: { language }, alltywpsql }) => (\n  <Table>\n    <TableHead>\n      <TableRow>\n        <TableCell>{t('common.name')}</TableCell>\n        <TableCell>{t('common.value')}</TableCell>\n      </TableRow>\n    </TableHead>\n    <TableBody>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.id')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.id}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.stringa')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.stringa}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.intero')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.intero}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.lungo')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.lungo}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.flotto')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.flotto}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.doppio')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.doppio}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.grandecimale')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.grandecimale}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.datalocale')}</span>\n        </TableCell>\n        <TableCell>\n          <span>\n            {alltywpsql.datalocale && new Date(alltywpsql.datalocale).toLocaleDateString(language)}\n          </span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.istante')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.istante && new Date(alltywpsql.istante).toLocaleString(language)}</span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.zonadatatempo')}</span>\n        </TableCell>\n        <TableCell>\n          <span>\n            {alltywpsql.zonadatatempo &&\n              new Date(alltywpsql.zonadatatempo).toLocaleString(language)}\n          </span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.booleano')}</span>\n        </TableCell>\n        <TableCell>\n          <span>\n            <Checkbox disabled checked={alltywpsql.booleano} />\n          </span>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell>\n          <span>{t('entities.alltywpsql.enumeratore')}</span>\n        </TableCell>\n        <TableCell>\n          <span>{alltywpsql.enumeratore}</span>\n        </TableCell>\n      </TableRow>\n    </TableBody>\n  </Table>\n);\n\nAlltywpsqlFieldTable.propTypes = {\n  alltywpsql: alltywpsqlType,\n  t: PropTypes.func.isRequired,\n  i18n: PropTypes.shape({\n    language: PropTypes.string,\n  }).isRequired,\n};\n\nAlltywpsqlFieldTable.defaultProps = {\n  alltywpsql: [],\n};\n\nexport default withTranslation()(AlltywpsqlFieldTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Box from '@material-ui/core/Box';\n\nimport alltywpsqlType from 'components/__types__/alltywpsql';\nimport AlltywpsqlFieldTable from 'components/alltywpsql-field-table/AlltywpsqlFieldTable';\n\nconst AlltywpsqlDetails = ({ t, alltywpsql }) => {\n  return (\n    <Box>\n      <h3 data-testid=\"details_title\">\n        {t('common.widgetName', {\n          widgetNamePlaceholder: 'Alltywpsql',\n        })}\n      </h3>\n      <AlltywpsqlFieldTable alltywpsql={alltywpsql} />\n    </Box>\n  );\n};\n\nAlltywpsqlDetails.propTypes = {\n  alltywpsql: alltywpsqlType,\n  t: PropTypes.func.isRequired,\n};\n\nAlltywpsqlDetails.defaultProps = {\n  alltywpsql: {},\n};\n\nexport default withTranslation()(AlltywpsqlDetails);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst styles = (theme) => ({\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconStatus: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n});\n\nconst statusIcon = {\n  success: CheckCircleIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst autoHideDurations = {\n  success: 3000,\n  error: null,\n  info: 5000,\n};\n\nconst Notification = ({ className, classes, status: passedStatus, message, onClose }) => {\n  const isOpen = !!message;\n\n  const status = passedStatus || Notification.INFO;\n  const Icon = statusIcon[status];\n  const autoHideDuration = autoHideDurations[status];\n\n  const messageTemplate = (\n    <span className={classes.message}>\n      <Icon className={clsx(classes.icon, classes.iconStatus)} />\n      {message}\n    </span>\n  );\n\n  return (\n    <Snackbar open={isOpen} onClose={onClose} autoHideDuration={autoHideDuration}>\n      <SnackbarContent\n        className={clsx(classes[status], className)}\n        message={messageTemplate}\n        action={[\n          <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nNotification.SUCCESS = 'success';\nNotification.ERROR = 'error';\nNotification.INFO = 'info';\n\nNotification.propTypes = {\n  classes: PropTypes.shape({\n    message: PropTypes.string.isRequired,\n    icon: PropTypes.string.isRequired,\n    iconStatus: PropTypes.string.isRequired,\n    error: PropTypes.string.isRequired,\n  }).isRequired,\n  className: PropTypes.string,\n  status: PropTypes.oneOf([Notification.SUCCESS, Notification.ERROR, Notification.INFO]),\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n};\n\nNotification.defaultProps = {\n  message: null,\n  className: '',\n  status: Notification.INFO,\n  onClose: () => {},\n};\n\nexport default withStyles(styles, { withTheme: true })(Notification);\n","export const getKeycloakToken = () => {\n  if (\n    window &&\n    window.entando &&\n    window.entando.keycloak &&\n    window.entando.keycloak.authenticated\n  ) {\n    return window.entando.keycloak.token;\n  }\n  return '';\n};\n\nexport const getDefaultOptions = () => ({\n  headers: new Headers({\n    Authorization: `Bearer ${getKeycloakToken()}`,\n    'Content-Type': 'application/json',\n  }),\n});\n\nexport const request = async (url, options) => {\n  const response = await fetch(url, options);\n\n  if (response.status === 204) {\n    return {};\n  }\n\n  return response.status >= 200 && response.status < 300\n    ? response.json()\n    : Promise.reject(new Error(response.statusText || response.status));\n};\n","import { getDefaultOptions, request } from 'api/helpers';\n\nconst resource = 'api/alltywpsqls';\n\n/* eslint-disable-next-line import/prefer-default-export */\nexport const apiAlltywpsqlGet = async (serviceUrl, id) => {\n  const url = `${serviceUrl}/${resource}/${id}`;\n  const options = {\n    ...getDefaultOptions(),\n    method: 'GET',\n  };\n  return request(url, options);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core';\n\nimport keycloakType from 'components/__types__/keycloak';\nimport withKeycloak from 'auth/withKeycloak';\nimport { AuthenticatedView, UnauthenticatedView } from 'auth/KeycloakViews';\nimport AlltywpsqlDetails from 'components/AlltywpsqlDetails';\nimport Notification from 'components/common/Notification';\nimport { apiAlltywpsqlGet } from 'api/alltywpsql';\n\nclass AlltywpsqlDetailsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      alltywpsql: {},\n      notificationStatus: null,\n      notificationMessage: null,\n    };\n\n    this.theme = createMuiTheme();\n    this.closeNotification = this.closeNotification.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    const { keycloak } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated) {\n      this.fetchData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keycloak, id } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    const changedAuth = prevProps.keycloak.authenticated !== authenticated;\n\n    const changedId = id && id !== prevProps.id;\n\n    if (authenticated && (changedId || changedAuth)) {\n      this.fetchData();\n    }\n  }\n\n  async fetchData() {\n    const { keycloak, id, serviceUrl } = this.props;\n    const authenticated = keycloak.initialized && keycloak.authenticated;\n\n    if (authenticated && id) {\n      try {\n        const alltywpsql = await apiAlltywpsqlGet(serviceUrl, id);\n        this.setState(() => ({\n          alltywpsql,\n        }));\n      } catch (err) {\n        this.handleError(err);\n      }\n    }\n  }\n\n  handleError(err) {\n    const { t, onError } = this.props;\n    onError(err);\n    this.setState(() => ({\n      notificationMessage: t('error.dataLoading'),\n      notificationStatus: Notification.ERROR,\n    }));\n  }\n\n  closeNotification() {\n    this.setState({\n      notificationMessage: null,\n    });\n  }\n\n  render() {\n    const { alltywpsql, notificationStatus, notificationMessage } = this.state;\n    const { t, keycloak } = this.props;\n\n    return (\n      <ThemeProvider theme={this.theme}>\n        <UnauthenticatedView keycloak={keycloak}>\n          {t('common.notAuthenticated')}\n        </UnauthenticatedView>\n        <AuthenticatedView keycloak={keycloak}>\n          <AlltywpsqlDetails alltywpsql={alltywpsql} />\n        </AuthenticatedView>\n        <Notification\n          status={notificationStatus}\n          message={notificationMessage}\n          onClose={this.closeNotification}\n        />\n      </ThemeProvider>\n    );\n  }\n}\n\nAlltywpsqlDetailsContainer.propTypes = {\n  id: PropTypes.string.isRequired,\n  onError: PropTypes.func,\n  t: PropTypes.func.isRequired,\n  keycloak: keycloakType.isRequired,\n  serviceUrl: PropTypes.string,\n};\n\nAlltywpsqlDetailsContainer.defaultProps = {\n  onError: () => {},\n  serviceUrl: '',\n};\n\nexport default withKeycloak(withTranslation()(AlltywpsqlDetailsContainer));\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { forwardRef, Component } from 'react';\nimport refType from 'components/__types__/ref';\nimport KeycloakContext from 'auth/KeycloakContext';\n\nexport default function withKeycloak(WrappedComponent) {\n  class WithKeycloakComponent extends Component {\n    renderWrappedComponent = (value) => {\n      const { forwardedRef, ...rest } = this.props;\n      return <WrappedComponent {...rest} ref={forwardedRef} keycloak={value} />;\n    };\n\n    render() {\n      return <KeycloakContext.Consumer>{this.renderWrappedComponent}</KeycloakContext.Consumer>;\n    }\n  }\n\n  WithKeycloakComponent.propTypes = {\n    forwardedRef: refType,\n  };\n\n  WithKeycloakComponent.defaultProps = {\n    forwardedRef: () => {},\n  };\n\n  return forwardRef((props, ref) => <WithKeycloakComponent {...props} forwardedRef={ref} />);\n}\n","import en from 'i18n/locales/en.json';\nimport it from 'i18n/locales/it.json';\n\nexport default {\n  en,\n  it,\n};\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport locales from 'i18n/locales';\n\nconst defaultNs = 'translation';\n\n// adds the default namespace ('translation') to resources object per i18next documentation\nconst resources = Object.keys(locales).reduce(\n  (acc, lang) => ({ ...acc, [lang]: { [defaultNs]: locales[lang] } }),\n  {}\n);\n\nexport const translateFn = i18next.t;\n\nexport const setI18nextLocale = (locale, defaultLocale) => {\n  i18next.use(initReactI18next).init({\n    defaultNs,\n    interpolation: {\n      escapeValue: false,\n    },\n    resources,\n    lng: locale || defaultLocale,\n    fallbackLng: defaultLocale,\n    react: { useSuspense: false },\n  });\n};\n","import { DEFAULT_LOCALE } from 'i18n/constants';\nimport { setI18nextLocale } from 'i18n/i18n';\n\nexport default (locale) => {\n  setI18nextLocale(locale, DEFAULT_LOCALE);\n};\n","/* eslint-disable-next-line import/prefer-default-export */\nexport const DEFAULT_LOCALE = 'en';\n","export const publishWidgetEvent = (eventId, payload) => {\n  const widgetEvent = new CustomEvent(eventId, {\n    detail: {\n      payload,\n    },\n  });\n  window.dispatchEvent(widgetEvent);\n};\n\nexport const createWidgetEventPublisher = (eventType) => (payload) =>\n  publishWidgetEvent(eventType, payload);\n\nexport const subscribeToWidgetEvent = (eventType, eventHandler) => {\n  window.addEventListener(eventType, eventHandler);\n\n  return () => {\n    window.removeEventListener(eventType, eventHandler);\n  };\n};\n\nexport const subscribeToWidgetEvents = (widgetEvents, eventHandler) => {\n  widgetEvents.forEach((eventType) => window.addEventListener(eventType, eventHandler));\n\n  return () => {\n    widgetEvents.forEach((eventType) => window.removeEventListener(eventType, eventHandler));\n  };\n};\n\nexport const widgetEventToFSA = (widgetEvent) => {\n  // for info about Flux Standard Action (FSA) see https://github.com/redux-utilities/flux-standard-action\n  const {\n    type,\n    detail: { payload, error, meta },\n  } = widgetEvent;\n  return { type, payload, error, meta };\n};\n","// eslint-disable-next-line import/prefer-default-export\nexport const INPUT_EVENT_TYPES = {\n  tableSelect: 'alltywpsql.table.select',\n};\nexport const OUTPUT_EVENT_TYPES = {\n  error: 'alltywpsql.details.error',\n};\nexport const KEYCLOAK_EVENT_TYPE = 'keycloak';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport retargetEvents from 'react-shadow-dom-retarget-events';\n\nimport { StylesProvider, ThemeProvider, jssPreset } from '@material-ui/core/styles';\nimport { createMuiTheme } from '@material-ui/core';\nimport { create as jssCreate } from 'jss';\n\nimport KeycloakContext from 'auth/KeycloakContext';\nimport AlltywpsqlDetailsContainer from 'components/AlltywpsqlDetailsContainer';\nimport setLocale from 'i18n/setLocale';\nimport {\n  subscribeToWidgetEvent,\n  subscribeToWidgetEvents,\n  createWidgetEventPublisher,\n} from 'helpers/widgetEvents';\nimport {\n  INPUT_EVENT_TYPES,\n  KEYCLOAK_EVENT_TYPE,\n  OUTPUT_EVENT_TYPES,\n} from 'custom-elements/widgetEventTypes';\n\nconst getKeycloakInstance = () =>\n  (window &&\n    window.entando &&\n    window.entando.keycloak && { ...window.entando.keycloak, initialized: true }) || {\n    initialized: false,\n  };\n\nconst ATTRIBUTES = {\n  id: 'id',\n  hidden: 'hidden',\n  locale: 'locale',\n  disableDefaultEventHandler: 'disable-default-event-handler', // custom element attribute names MUST be written in kebab-case\n  serviceUrl: 'service-url',\n};\n\nclass AlltywpsqlDetailsElement extends HTMLElement {\n  jss;\n\n  container;\n\n  mountPoint;\n\n  keycloak = getKeycloakInstance();\n\n  unsubscribeFromWidgetEvents;\n\n  unsubscribeFromKeycloakEvent;\n\n  defaultEventHandlerDisabled;\n\n  onError = createWidgetEventPublisher(OUTPUT_EVENT_TYPES.error);\n\n  muiTheme;\n\n  static get observedAttributes() {\n    return Object.values(ATTRIBUTES);\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (!this.container || oldValue === newValue) {\n      return;\n    }\n    if (!Object.values(ATTRIBUTES).includes(name)) {\n      throw new Error(`Untracked changed attribute: ${name}`);\n    }\n    if (name === ATTRIBUTES.disableDefaultEventHandler) {\n      this.onToggleDisableDefaultEvent();\n    }\n    this.render();\n  }\n\n  connectedCallback() {\n    this.container = document.createElement('div');\n    this.mountPoint = document.createElement('div');\n    this.container.appendChild(this.mountPoint);\n\n    const shadowRoot = this.attachShadow({ mode: 'open' });\n    shadowRoot.appendChild(this.container);\n\n    this.jss = jssCreate({\n      ...jssPreset(),\n      insertionPoint: this.container,\n    });\n\n    this.muiTheme = createMuiTheme({\n      props: {\n        MuiDialog: {\n          container: this.mountPoint,\n        },\n        MuiPopover: {\n          container: this.mountPoint,\n        },\n      },\n    });\n\n    this.keycloak = { ...getKeycloakInstance(), initialized: true };\n\n    this.unsubscribeFromKeycloakEvent = subscribeToWidgetEvent(KEYCLOAK_EVENT_TYPE, () => {\n      this.keycloak = { ...getKeycloakInstance(), initialized: true };\n      this.render();\n    });\n\n    this.onToggleDisableDefaultEvent();\n\n    this.render();\n\n    retargetEvents(shadowRoot);\n  }\n\n  disconnectedCallback() {\n    if (this.unsubscribeFromWidgetEvents) {\n      this.unsubscribeFromWidgetEvents();\n    }\n    if (this.unsubscribeFromKeycloakEvent) {\n      this.unsubscribeFromKeycloakEvent();\n    }\n  }\n\n  defaultWidgetEventHandler() {\n    return (evt) => {\n      const { tableSelect } = INPUT_EVENT_TYPES;\n      const { id } = ATTRIBUTES;\n      switch (evt.type) {\n        case tableSelect: {\n          this.setAttribute(id, evt.detail.payload.id);\n          break;\n        }\n        default:\n          throw new Error(`Unsupported event: ${evt.type}`);\n      }\n    };\n  }\n\n  onToggleDisableDefaultEvent() {\n    const disableEventHandler = this.getAttribute(ATTRIBUTES.disableDefaultEventHandler) === 'true';\n\n    if (disableEventHandler !== this.defaultEventHandlerDisabled) {\n      if (!disableEventHandler) {\n        const defaultWidgetEventHandler = this.defaultWidgetEventHandler();\n\n        this.unsubscribeFromWidgetEvents = subscribeToWidgetEvents(\n          Object.values(INPUT_EVENT_TYPES),\n          defaultWidgetEventHandler\n        );\n      } else {\n        if (this.unsubscribeFromWidgetEvents) {\n          this.unsubscribeFromWidgetEvents();\n        }\n        if (this.unsubscribeFromKeycloakEvent) {\n          this.unsubscribeFromKeycloakEvent();\n        }\n      }\n      this.defaultEventHandlerDisabled = disableEventHandler;\n    }\n  }\n\n  render() {\n    const serviceUrl = this.getAttribute(ATTRIBUTES.serviceUrl) || '';\n\n    const hidden = this.getAttribute(ATTRIBUTES.hidden) === 'true';\n    if (hidden) {\n      ReactDOM.render(<></>);\n      return;\n    }\n\n    const locale = this.getAttribute(ATTRIBUTES.locale);\n    setLocale(locale);\n\n    const id = this.getAttribute(ATTRIBUTES.id);\n\n    ReactDOM.render(\n      <KeycloakContext.Provider value={this.keycloak}>\n        <StylesProvider jss={this.jss}>\n          <ThemeProvider theme={this.muiTheme}>\n            <AlltywpsqlDetailsContainer id={id} onError={this.onError} serviceUrl={serviceUrl} />\n          </ThemeProvider>\n        </StylesProvider>\n      </KeycloakContext.Provider>,\n      this.mountPoint\n    );\n  }\n}\ncustomElements.define('alltywpsql-details', AlltywpsqlDetailsElement);\n"],"sourceRoot":""}